reptar

building				

reptar files:  { '/Users/samhinshaw/projects/reptar_blog/_error/404.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_error/404.md',
     path: '/Users/samhinshaw/projects/reptar_blog/_error/404.md',
     destination: '/404.html',
     frontmatter: 
      { title: '404',
        template: 'page',
        heroColor: '#3c3f2b',
        heroImage: 'first-lake-crop.jpg',
        heroText: '404: Page not found' },
     data: 
      { template: 'page',
        permalink: '/:title.html',
        title: '404',
        heroColor: '#3c3f2b',
        heroImage: 'first-lake-crop.jpg',
        heroText: '404: Page not found',
        content: '\n<div class="columns is-desktop">\n  <div class="column is-8 is-offset-2 has-text-centered">\n\n\n  <p>Sorry, it looks like this page does not exist!</p>\n  <p>\n    <a class="button" href="javascript:history.back()">\n      <!-- <span class="icon is-small">\n        <i class="fas fa-arrow-left" aria-hidden="true"></i>\n      </span> -->\n      <span>Go Back</span>\n    </a>\n  </p>\n\n  </div>\n</div>\n',
        url: '/404.html' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: '390b4c7aab599f35062ff795c36b660e',
     defaults: { template: 'page', permalink: '/:title.html' } },
  '/Users/samhinshaw/projects/reptar_blog/_plugins/markdown-config.js': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_plugins/markdown-config.js',
     path: '/Users/samhinshaw/projects/reptar_blog/_plugins/markdown-config.js',
     destination: '/_plugins/markdown-config.js',
     frontmatter: {},
     data: { url: '/_plugins/markdown-config.js' },
     skipProcessing: true,
     assetProcessor: 
      { calculateDestination: [Function: calculateDestination],
        render: [Function: render] },
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/_posts/2016-09-23-UpdateRstudio.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_posts/2016-09-23-UpdateRstudio.md',
     path: '/Users/samhinshaw/projects/reptar_blog/_posts/2016-09-23-UpdateRstudio.md',
     destination: '/blog/automatically-update-rstudio/index.html',
     frontmatter: 
      { layout: 'post',
        title: 'Automatically Update Rstudio',
        date: 2016-09-23T00:00:00.000Z,
        excerpt: 'How to use Cron to automatically update Rstudio on unix-like systems.',
        heroImage: 'overhead-coffee-mug.jpg',
        heroColor: '#F2D6BC',
        imageAuthor: 'Jakub Dziubak',
        imageAuthorHandle: '@jckbck' },
     data: 
      { template: 'post',
        permalink: '/blog/:title/',
        layout: 'post',
        title: 'Automatically Update Rstudio',
        date: 2016-09-23T00:00:00.000Z,
        excerpt: 'How to use Cron to automatically update Rstudio on unix-like systems.',
        heroImage: 'overhead-coffee-mug.jpg',
        heroColor: '#F2D6BC',
        imageAuthor: 'Jakub Dziubak',
        imageAuthorHandle: '@jckbck',
        content: '\nI like to use the preview or daily versions of RStudio to get access to the latest features. However, unlike the stable version, these versions do not offer the ability to check for updates within the application!\n\nHere, we examine a method for automatically updating any channel of the RStudio IDE using the [Cron task scheduler](https://en.wikipedia.org/wiki/Cron) built into unix-like systems.\nInformation on package downloads were obtained from the [RStudio website](https://support.rstudio.com/hc/en-us/articles/203842428-Getting-the-newest-RStudio-builds), and this automation was prompted by [a question asked by a student on GitHub](https://github.com/STAT545-UBC/Discussion/issues/334).\n\n### Step 1. Write your script\n\nI like to keep my automation scripts in `~/scripts`, but you may have a different personal preference.  In any case, the script I wrote is as follows:\n\n```bash\necho "Commencing RStudio update on" $(date +"%A %b %d, %Y") at $(date +"%r")\ncd /home/shinshaw/Downloads\nmkdir rstudio && cd rstudio\nwget -O rstudio.deb http://www.rstudio.org/download/latest/preview/desktop/ubuntu64/rstudio-latest-amd64.deb\nsudo dpkg -i rstudio.deb\ncd /home/shinshaw/Downloads\nrm -r rstudio/\n```\nNotes:\n\n- I am using absolute file paths here to ensure no weirdness occurs when running this script via crontab.\n- You can change your `echo` messages to add any other useful information.  If you\'d like to check datetime language, run `date --help` in terminal.\n- You can change URL in the script to download any version of Rstudio you wish, as per the [RStudio website](https://support.rstudio.com/hc/en-us/articles/203842428-Getting-the-newest-RStudio-builds)!  You can choose from:\n\t- Release Channel\n\t\t+ stable\n\t\t+ preview\n\t\t+ daily\n\t- Installation Type\n\t\t+ desktop\n\t\t+ server\n\t- Operating System\n\t\t+ mac\n\t\t+ windows\n\t\t+ fedora32\n\t\t+ fedora64\n\t\t+ ubuntu32\n\t\t+ ubuntu64\n\nMake sure the script you\'ve saved is executable.\n\n```bash\nchmod +x ~/scripts/updateRstudio.sh\n```\n\n### Step 2. Schedule Script\n\nNext, you\'ll need to schedule this script to run at a given time.  I\'ve chosen to update my RStudio build at 4am on Sunday morning.  This should make pretty certain that I don\'t encounter any conflicts.\n\nCron is managed with a configuration file known as the crontab, and each user has their own copy. In implementing our automation it is necessary that we access the root crontab, and not a user crontab, as we\'ll be installing packages which requires elevated permissions. In terminal, type:\n\n```bash\nsudo crontab -e\n```\n\nThis will open the root crontab in your default text editor.  Note: to [change your default text editor](https://superuser.com/questions/281617/change-default-text-editor-for-crontab-to-vim), set the EDITOR and VISUAL environment variables to your editor of choice in your shell login file. In crontab, add a line such as:\n\n```bash\n00 04 * * 7 /home/shinshaw/scripts/updateRstudio.sh >> /home/shinshaw/scripts/logs/updateRstudio.log 2>&1\n```\n\nLet\'s work through this line:\n\n1. `00 04 * * 7 ` tells Cron when to run. Check the [crontab manual](http://man7.org/linux/man-pages/man5/crontab.5.html) for further details.\n2. `/home/shinshaw/scripts/updateRstudio.sh` tells Cron to execute my script\n3. `>>` tells Cron to append the stdout of my script to `/home/shinshaw/scripts/logs/updateRstudio.log`\n4. `2>&1` tells Cron to include stderr as well.\n',
        url: '/blog/automatically-update-rstudio/' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: 'ed89fad8735f80278655e9699dcebcc3',
     defaults: { template: 'post', permalink: '/blog/:title/' } },
  '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-09-autokey.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-09-autokey.md',
     path: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-09-autokey.md',
     destination: '/blog/installing-autokey/index.html',
     frontmatter: 
      { layout: 'post',
        title: 'Installing Autokey!',
        date: 2017-02-09T00:00:00.000Z,
        draft: true },
     data: 
      { template: 'post',
        permalink: '/blog/:title/',
        layout: 'post',
        title: 'Installing Autokey!',
        date: 2017-02-09T00:00:00.000Z,
        draft: true,
        content: '\n\nAutokey is a fantastic shortcut program. I\'m currently using it to insert angle brackets more ergonomically.\n\nThere is a current fork being maintained in python3: https://github.com/autokey-py3/autokey\n\nTo install:\n\n1. `sudo add-apt-repository ppa:troxor/autokey`\n2. `sudo apt update`\n3. `sudo apt install autokey-gtk`\n4. Point your autokey installation to ~/Dropbox/Ubuntu/Autokey_Sync\n',
        url: '/blog/installing-autokey/' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: true,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: '4041330f7b68a6583d0aa7860397b5ee',
     defaults: { template: 'post', permalink: '/blog/:title/' } },
  '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-09-encryption.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-09-encryption.md',
     path: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-09-encryption.md',
     destination: '/blog/encryption-commands-for-letsencrypt/index.html',
     frontmatter: 
      { layout: 'post',
        title: 'Encryption Commands for LetsEncrypt',
        date: 2017-02-09T00:00:00.000Z,
        excerpt: 'How to setup a LetsEncrypt HTTPS certificate on your webserver',
        draft: true },
     data: 
      { template: 'post',
        permalink: '/blog/:title/',
        layout: 'post',
        title: 'Encryption Commands for LetsEncrypt',
        date: 2017-02-09T00:00:00.000Z,
        excerpt: 'How to setup a LetsEncrypt HTTPS certificate on your webserver',
        draft: true,
        content: '\nSo you want to add an HTTPS certificate to your website? With [Let\'s Encrypt](https://letsencrypt.org/), it\'s easy!\n\nThese commands are specific to an nginx server. Let\'s say your site\'s domain is `example.com`, and is being served from `~/serve/blog`.\n\n```bash\nsudo letsencrypt certonly -a webroot --webroot-path=/home/user/serve/blog -d example.com\n\nsudo nano /etc/nginx/snippets/ssl-example.com.conf\n\nssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;\nssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;\n```\n',
        url: '/blog/encryption-commands-for-letsencrypt/' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: true,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: 'bf4526c4f6059f1e56be7754ea6306a0',
     defaults: { template: 'post', permalink: '/blog/:title/' } },
  '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-09-FirefoxNightly.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-09-FirefoxNightly.md',
     path: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-09-FirefoxNightly.md',
     destination: '/blog/how-to-install-firefox-nightly/index.html',
     frontmatter: 
      { layout: 'post',
        title: 'How to Install Firefox Nightly',
        date: 2017-02-09T00:00:00.000Z,
        draft: true },
     data: 
      { template: 'post',
        permalink: '/blog/:title/',
        layout: 'post',
        title: 'How to Install Firefox Nightly',
        date: 2017-02-09T00:00:00.000Z,
        draft: true,
        content: '\n\n1. Untar/unzip: `cd ~/Downloads/ && tar xjf firefox-51.0.tar.bz2`\n2. Remove old firefox directory `sudo rm -r /opt/firefox`\n3. Move new firefox installation to /opt `sudo mv firefox /opt/firefox`\n4. Create symlink for binary in /usr/bin: `sudo ln -s /opt/firefox/firefox /usr/bin/firefox`\n',
        url: '/blog/how-to-install-firefox-nightly/' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: true,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: '84d2cc3d2699dc53a373d3ba8b46063d',
     defaults: { template: 'post', permalink: '/blog/:title/' } },
  '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-09-NodeJS.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-09-NodeJS.md',
     path: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-09-NodeJS.md',
     destination: '/blog/installing-nodejs-on-linux/index.html',
     frontmatter: 
      { layout: 'post',
        title: 'Installing Node.js on Linux',
        date: 2017-02-09T00:00:00.000Z,
        excerpt: 'How to get Node.js up and running without Homebrew.',
        heroImage: 'ring-light.jpg',
        heroColor: '#2A3E57',
        imageAuthor: 'Nadine Shaabana',
        imageAuthorHandle: '@nadineshaabana' },
     data: 
      { template: 'post',
        permalink: '/blog/:title/',
        layout: 'post',
        title: 'Installing Node.js on Linux',
        date: 2017-02-09T00:00:00.000Z,
        excerpt: 'How to get Node.js up and running without Homebrew.',
        heroImage: 'ring-light.jpg',
        heroColor: '#2A3E57',
        imageAuthor: 'Nadine Shaabana',
        imageAuthorHandle: '@nadineshaabana',
        content: '\nInstalling Node.js on macOS is as easy as `brew install`. However, on other unix systems, installing Node.js isn\'t quite as easy as `apt-get install`. First we need to execute the setup scripts.\n\n## Run Setup Scripts\n\nFor the current Node.js LTS:\n```bash\ncurl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -\nsudo apt-get install -y nodejs\n```\n\nFor the latest:\n```bash\ncurl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -\nsudo apt-get install -y nodejs\n```\n\n## Check Global Install Path\n\nAfterwards, it is important to check your global install path. Unfortunately, this is not always set correctly, and may default to `/usr`, necessitating elevated permissions to install packages globally. This is well documented in the [Node.js docs](https://docs.npmjs.com/getting-started/fixing-npm-permissions), but I will briefly reiterate the commands here:\n\nFirst check your global install path:\n```bash\nnpm config get prefix\n```\n\nIf this directory is not user-writeable, it is **strongly** recommended to change it. The official recommendation is to use `~/.npm-global`.\n```bash\nmkdir ~/.npm-global\nnpm config set prefix \'~/.npm-global\'\n# Replace ~/.profile with your shell start script of choice\necho \'export PATH=~/.npm-global/bin:$PATH\' >> ~/.profile\nsource ~/.profile\n```\n',
        url: '/blog/installing-nodejs-on-linux/' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: 'd5dc34a26eab731767a3c268a8f22335',
     defaults: { template: 'post', permalink: '/blog/:title/' } },
  '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-09-SSH_keys.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-09-SSH_keys.md',
     path: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-09-SSH_keys.md',
     destination: '/blog/how-to-setup-your-ssh-keys/index.html',
     frontmatter: 
      { layout: 'post',
        title: 'How to Setup Your SSH Keys',
        date: 2017-02-09T00:00:00.000Z,
        draft: true },
     data: 
      { template: 'post',
        permalink: '/blog/:title/',
        layout: 'post',
        title: 'How to Setup Your SSH Keys',
        date: 2017-02-09T00:00:00.000Z,
        draft: true,
        content: '\n## Create SSH Keys\n\n1. Make sure SSH-Agent is running `eval $(ssh-agent)`\n\t+ Alternatively, add this to your `~/.bashrc`:\n\t```bash\n\teval $(ssh-agent) > /dev/null`\n\tsource ~/Dropbox/Ubuntu/scripts/ssh-find-agent.sh\n\tset_ssh_agent_socket\n\t```\n2. Check to see if you have any existing keys: `ls ~/.ssh`\n3. Create your SSH keys: `ssh-keygen -t rsa -b 4096 -C "you.email@example.com"`\n4. Add your ssh keys to the SSH Agent: `ssh-add -t 15552000 ~/.ssh/id_rsa` The `-t` flag specifies a timeout value is in seconds. 15552000 seconds is six months.\n\n## Add your public key to your destination\n\n### Using an online service such as GitHub, DigitalOcean, or Heroku\n\n1. Download and install xclip. `sudo apt-get install xclip`\n2. Use xclip to copy your ssh-keys to the clipboard `xclip -sel clip < ~/.ssh/id_rsa.pub`\n3. Paste this into the online form.\n\n### Using a remote server and `~/.ssh/authorized_keys`\n\n1. Using tunneled password, SSH into the machine and append the public key to your remote server\'s authorized_keys file. `cat ~/.ssh/id_rsa.pub | ssh you.email@example.com"mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys"`\n',
        url: '/blog/how-to-setup-your-ssh-keys/' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: true,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: '030bd67f097be8d69657e3ee8aa6fec5',
     defaults: { template: 'post', permalink: '/blog/:title/' } },
  '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-10-zsh.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-10-zsh.md',
     path: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-02-10-zsh.md',
     destination: '/blog/installing-zsh/index.html',
     frontmatter: 
      { layout: 'post',
        title: 'Installing ZSH',
        date: 2017-02-10T00:00:00.000Z,
        excerpt: 'How to install ZSH on unix systems with Oh-My-ZSH, Powerline, and a material design color palette.',
        draft: true },
     data: 
      { template: 'post',
        permalink: '/blog/:title/',
        layout: 'post',
        title: 'Installing ZSH',
        date: 2017-02-10T00:00:00.000Z,
        excerpt: 'How to install ZSH on unix systems with Oh-My-ZSH, Powerline, and a material design color palette.',
        draft: true,
        content: '\n### ZSH\n\nNote: this section was copied almost entirely from [NTag\'s](https://github.com/NTag) [gist](https://gist.github.com/NTag/39a27aea87aeabe54c09)\n\n\n#### Install ZSH\n\n```bash\nsudo apt-get install git zsh\n```\n\n#### Install OhMyZSH\n\n```bash\nsh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"\n```\n\n#### Install zsh-autosuggestions\n\n```bash\ngit clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions\n```\n\nEdit `~/.zshrc`:\n\n```bash\n# replace\nplugins=(git)\n# with\nplugins=(git zsh-autosuggestions)\n```\n\ncreate a file `~/.oh-my-zsh/custom/colors.zsh` containing:\n\n```bash\nZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=\'fg=240\'\n```\n\n### Install zsh-syntax-highlighting\n\n```bash\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n```\n\nEdit `~/.zshrc`:\n\n```bash\n# replace\nplugins=(git zsh-autosuggestions)\n# with\nplugins=(git zsh-autosuggestions zsh-syntax-highlighting)\n```\n\n### Install Powerline\n\nInstall pip:\n\n```bash\ncurl https://bootstrap.pypa.io/get-pip.py | python\nsudo pip install powerline-status\n```\nFind where Powerline has been installed\n\n```bash\npip show powerline-status\n```\n\nAdd the location printed to the end of `~/.zshrc` as such:\n\n```bash\n. /usr/local/lib/python2.7/dist-packages/powerline/bindings/zsh/powerline.zsh\n```\n\n#### Set ZSH as default shell\n\n```bash\nchsh -s /usr/bin/zsh\n```\n\n## Material Design Terminal Colors\n\n1. Open Terminal Preferences and create a new profile\n2. Edit this profile and go to Colors\n3. Set Background to `#263238` and Text to `#FFFFFF`\n4. Set Palette using these colors:\n\n```bash\nblack: \'#546e7a\',\nred: \'#ff5252\',\ngreen: \'#9ECE58\',\nyellow: \'#ffca28\',\nblue: \'#396fe2\',\nmagenta: \'#BB80B3\',\ncyan: \'#2DDAFD\',\nwhite: \'#F0F0F0\',\nlightBlack: \'#b0bec5\',\nlightRed: \'#ff8a80\',\nlightGreen: \'#C3E88D\',\nlightYellow: \'#FAED70\',\nlightBlue: \'#82aaff\',\nlightMagenta: \'#C792EA\',\nlightCyan: \'#89DDFF\',\nlightWhite: \'#FFFFFF\'\n```\n',
        url: '/blog/installing-zsh/' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: true,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: 'b7c7fdb85ea5dd444cf4c0ffcaf9ccc3',
     defaults: { template: 'post', permalink: '/blog/:title/' } },
  '/Users/samhinshaw/projects/reptar_blog/_posts/2017-09-04_reptar.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-09-04_reptar.md',
     path: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-09-04_reptar.md',
     destination: '/blog/building-a-blog-with-reptar-and-bulma/index.html',
     frontmatter: 
      { layout: 'post',
        title: 'Building a Blog with Reptar and Bulma',
        date: 2017-09-04T00:00:00.000Z,
        excerpt: 'How and Why I Migrated my Jekyll Blog to Reptar.',
        draft: true },
     data: 
      { template: 'post',
        permalink: '/blog/:title/',
        layout: 'post',
        title: 'Building a Blog with Reptar and Bulma',
        date: 2017-09-04T00:00:00.000Z,
        excerpt: 'How and Why I Migrated my Jekyll Blog to Reptar.',
        draft: true,
        content: '\nA while ago, I decided to migrate my webserver from the VPS provider DigitalOcean to Vultr. While DigitalOcean provides a great service (and I still use their help pages), Vultr had just launched a 2.50 USD/mo tier which sounded attractive to me for two reasons. One, I\'m a graduate student and saving $30/yr sounded good to me, and two, I\'m only serving a static site from this VPS, and don\'t need much server power to keep it up and running!\n\nAround the same time, I heard the Front End Happy Hour podcast [episode about static site generators](http://frontendhappyhour.com/episodes/static-site-generators-and-dynamic-drink-drinkers/) featuring Harry Wolff. Harry created Reptar, a static site generator built in JavaScript, a much more performant alternative to the widely-used Jekyll, built in Ruby. The idea of switching to a static site generator that I could install via npm was very attractive. If I could ditch Jekyll, then I could build my site on this slimmed down VPS offering and build my sites remotely without managing a ruby installation on my VPS. And as if I needed any other reason, it was called <span class="hover-text" title="The static site generator formerly known as yarn.">Reptar</span>!!\n\nInitially, I thought about porting my Jekyll theme over to Reptar. However, I quickly realized this might be more complicated than I initially anticipated. Besides, I had been wanting to redesign the site anyways, as I was hoping to find a way to showcase some of my photography on the site.  However, if I was going to attempt a redesign, I knew I would need to find a CSS framework to help me out. I explored the post-bootstrap era of CSS frameworks and eventually settled on [Bulma](http://bulma.io). Bulma is a fantastic framework for a couple of reasons. First, it is build on flexbox, a <span class="hover-text" title="Keep those pesky footers stuck to the bottom of the screen with just a few lines of CSS.">modern</span> web layout solution. Second, it is fully-featured and widely-used, meaning support would be simple, and I could dig into the GitHub issues for the framework if I ran into any problems.\n',
        url: '/blog/building-a-blog-with-reptar-and-bulma/' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: true,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: 'f561617352e34dab7c8df96935842512',
     defaults: { template: 'post', permalink: '/blog/:title/' } },
  '/Users/samhinshaw/projects/reptar_blog/_posts/2017-09-13_ligatures.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-09-13_ligatures.md',
     path: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-09-13_ligatures.md',
     destination: '/blog/ligature-support-in-monospace-fonts/index.html',
     frontmatter: 
      { layout: 'post',
        title: 'Ligature Support in Monospace Fonts',
        date: 2017-09-13T00:00:00.000Z,
        excerpt: 'Implementing ligature-supported monospace fonts across multiple platforms.',
        heroImage: 'arrow.jpg',
        heroColor: '#959084',
        imageAuthor: 'Shirly Niv Marton',
        imageAuthorHandle: '@sniv' },
     data: 
      { template: 'post',
        permalink: '/blog/:title/',
        layout: 'post',
        title: 'Ligature Support in Monospace Fonts',
        date: 2017-09-13T00:00:00.000Z,
        excerpt: 'Implementing ligature-supported monospace fonts across multiple platforms.',
        heroImage: 'arrow.jpg',
        heroColor: '#959084',
        imageAuthor: 'Shirly Niv Marton',
        imageAuthorHandle: '@sniv',
        content: '\n<div class="has-text-centered">\n\n```r\n\'ligatures\' != \'symbols\'\n```\n\n</div>\n\n## Background\n\nWhat a busy week! On Monday, I started using Visual Studio Code, replacing my previous text editor of choice, Atom. As it turns out, Wes Bos of the [Syntax Podcast](https://syntax.fm/) ([@WesBos](https://twitter.com/wesbos)) is doing the same right now. I learned about <span class="hover-text" title="from Latin: ligatus, \'bound\'">ligature</span> implementation in programming fonts [via his twitter](https://twitter.com/kiliman/status/907709797193134082) yesterday. Then today, I saw a [blog post](https://blog.rstudio.com/2017/09/13/rstudio-v1.1---the-little-things/) about some of the smaller features implemented in RStudio 1.1, and, of course, ligature support was added! \n\nPerhaps the most compelling reasons for me to check this out was the beautiful new assignment operator in R.\n```r\nvariable <- value\n```\n\nYou may already know about ligatures and not even know it.  One classic example is implemented in Microsoft Word&mdash;the em dash. If you\'re wondering what it looks like, that was it right there! "&mdash;". All you have to do to use it is type two hypens between words and MSWord will autocomplete for you. Ligature support in modern code editors is as simple as that, but you\'re getting a lot more bang for your buck!\n\nI found a fantastic [blog post by Scott Hanselman](https://www.hanselman.com/blog/MonospacedProgrammingFontsWithLigatures.aspx) detailing some of his findings. He links to three popular monospace fonts with ligature support, and I decided to go with the most popular, Fira Code. Fira Code is based on [Fira Mono](https://fonts.google.com/specimen/Fira+Mono), a font designed for Mozilla for the now-defunct FirefoxOS. 😕\n\nWithout any further ado, let\'s get to the **how**. \n\n## Installation\n\n### System Applications\n\nClone the [Fira Code Repository](https://github.com/tonsky/FiraCode) and install the fonts per your OS:  \n- Font Book (macOS)\n- Fonts (Windows) \n- Font Viewer (GNOME Desktop Linux)\n\n#### RStudio\n\nFirst make sure you have version 1.1.x of RStudio installed. As of this writing, you must be on the [Preview](https://www.rstudio.com/products/rstudio/download/preview/) (really quite stable) or more experimental [Nightly](https://dailies.rstudio.com/) builds.  \n\nThen set the default font to FiraCode and you\'re good to go!\n\n#### VSCode\n\nOpen settings and add the following lines\n```js\n{\n  // Enable ligature support\n  "editor.fontLigatures": true,\n  // Choose one:\n  // for regular font:\n  "editor.fontFamily": "Fira Code",\n  // Specific styles may need alternate syntax\n  // "editor.fontFamily": "FiraCode-Retina"\n  // or\n  // "editor.fontFamily": "Fira Code Retina"\n}\n```\n\n#### Terminal \n\nI use Hyper as my terminal emulator for exactly this situation! I love being able to customize my terminal with ease.\n\nIn your `~/.hyper.js` config file, add:\n```js\n{\n  fontFamily: \'"FiraCode-Retina", "Fira Code"\',\n\n  plugins: \'hyper-ligatures\'\n}\n```\n\n### Web\n\nFor web, you can use the WOFF2 webfont files. In your site\'s CSS, simply add:\n\n```css\n/* Make pre tags use Fira Code and use ligatures */\n\n@font-face {\n  /* Name your font */\n  font-family: \'Fira Code\';\n  /* Link to your font files here! */\n  src: url(../fonts/FiraCode-Regular.woff2);\n}\n\ncode {\n  /* Recognize that name? */\n  font-family: \'Fira Code\' /* fallback fonts */;\n  /* enable ligatures with CSS3 */\n  font-variant-ligatures: common-ligatures;\n}\n```\n\n## Conclusion\n\nThat was it! You\'re done! For the moment, I\'m enjoying ligatures due to their aesthetic, but I am curious if I will run into issues in the future with difficulty distinguishing between different operators. Specifically, in JavaScript, the difference between `==` and `===` can be <span class="hover-text" title="the double equals operator performs type-coercion, triple equals does not.">code-breaking</span>. But for now, I\'m just going to enjoy!\n\nFor more comprehensive installation instructions and troubleshooting, check out the [Fira Code Wiki on GitHub](https://github.com/tonsky/FiraCode/wiki). \n\nLet me know what you think on [twitter](https://twitter.com/samhinshaw)!\n\n*****\n\n## Further Reading\n\n[Fira Code - Wiki](https://github.com/tonsky/FiraCode/wiki)\n\n[Wikipedia - Typographic Ligature](https://en.wikipedia.org/wiki/Typographic_ligature)\n\n[Smashing Magazine - Typographic Etiquette](https://www.smashingmagazine.com/2011/08/mind-your-en-and-em-dashes-typographic-etiquette/)',
        url: '/blog/ligature-support-in-monospace-fonts/' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: '42e13a5e59fcc977b4a850f05b830046',
     defaults: { template: 'post', permalink: '/blog/:title/' } },
  '/Users/samhinshaw/projects/reptar_blog/_posts/2017-09-28_template-literals.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-09-28_template-literals.md',
     path: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-09-28_template-literals.md',
     destination: '/blog/wrapping-template-literals-in-vs-code/index.html',
     frontmatter: 
      { layout: 'post',
        title: 'Wrapping Template Literals in VS Code',
        date: 2017-09-28T00:00:00.000Z,
        lastUpdated: 2018-03-14T00:00:00.000Z,
        excerpt: 'How to get VS Code to wrap your template literals, not replace them.',
        draft: false,
        heroImage: 'type-letters.jpg',
        heroColor: '#7B706C',
        imageAuthor: 'Raphael Schaller',
        imageAuthorHandle: '@raphaelphotoch' },
     data: 
      { template: 'post',
        permalink: '/blog/:title/',
        layout: 'post',
        title: 'Wrapping Template Literals in VS Code',
        date: 2017-09-28T00:00:00.000Z,
        lastUpdated: 2018-03-14T00:00:00.000Z,
        excerpt: 'How to get VS Code to wrap your template literals, not replace them.',
        draft: false,
        heroImage: 'type-letters.jpg',
        heroColor: '#7B706C',
        imageAuthor: 'Raphael Schaller',
        imageAuthorHandle: '@raphaelphotoch',
        content: '\n## Intro\n\nRecently, I have been frustrated with VS Code not respecting ES6 template literals when constructing strings. \n\nSay you want turn a particular chunk of code into a string. Normally, you would highlight the text and type `\'`. The highlighted text will automatically be surrounded by single quotes! However, if you attempt this with a backtick (`` ` ``), the entire text is replaced by a backtick (as you would expect with any other character). My main frustration is that this highlight-quoting works with backticks in markdown documents, but not JS files!\n\nI decided to figure out how to get around this. First, I found an issue discussing the original implementation in markdown highlighting in the [vscode repository](https://github.com/Microsoft/vscode/issues/1307). This pointed me towards the [markdown language configuration options](https://github.com/Microsoft/vscode/blob/master/extensions/markdown/language-configuration.json). \n\n## Method 1: Language Configuration\n\nIf you would like to have any of these options apply to languages other than markdown, you can copy the markdown preferences! Open your language configuration preferences file via the command palette (&#8984;+&#8679;+P, \'Preferences: Configure Language Specific Settings...\') and choose JavaScript. Then edit the line within the "[javascript]" field that gets created in your `settings.json` so yours looks something like this:\n\n```js\n  "[javascript]": {\n    "surroundingPairs": ["`", "`"]]\n  }\n```\n\nVoila! You are all good to go! You can update this for any language you would like.\n\n## Method 2: Keybinding\n\nIf, instead, you wanted to be able to do this for any language with a keybind, the docs for vscode show you [how to implement and keybind your own snippets](https://code.visualstudio.com/docs/editor/userdefinedsnippets). \n\nThe snippet below is what I came up with. \n\n```json\n  {\n    "key": "cmd+k `",\n    "command": "editor.action.insertSnippet",\n    "when": "editorTextFocus",\n    "args": {\n      "snippet": "`${1:${TM_SELECTED_TEXT}}`$0"\n    }\n  }\n```\n\nOpen your keybindings file via the command palette (&#8984;+&#8679;+P, \'Preferences: Open Keyboard Shortcuts File\') and paste this object at the end of your keybindings.json file. \n\nWhenever you want to surround some text with backticks, highlight the text and hit &#8984;+K and then \\`. \n\n## Bonus: Toggle Quote Types\n\nThe VS Code extension "[ECMAScript Quotes Transformer](https://marketplace.visualstudio.com/items?itemName=vilicvane.es-quotes)" allows you to quickly toggle between quote styles! In your `keybindings.json` file, add a keybinding for toggling as such:\n\n```json\n  {\n    "key": "alt+shift+`",\n    "command": "esQuotes.transformBetweenQuotes"\n  }\n```\n\nThen, when your cursor is within a quoted string, use the shortcut to toggle between `` ` ``, `"`, and `\'` as your surrounding pairs. This is super handy when you quickly want to transform a regular string into a template string to add a variable!',
        url: '/blog/wrapping-template-literals-in-vs-code/' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: '6b58b17d9bf7a197ded0e34213f5c904',
     defaults: { template: 'post', permalink: '/blog/:title/' } },
  '/Users/samhinshaw/projects/reptar_blog/_posts/2017-10-20_dynamic_package_loads.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-10-20_dynamic_package_loads.md',
     path: '/Users/samhinshaw/projects/reptar_blog/_posts/2017-10-20_dynamic_package_loads.md',
     destination: '/blog/lazy-loading-r-packages-in-shiny/index.html',
     frontmatter: 
      { layout: 'post',
        title: 'Lazy Loading R Packages in Shiny',
        date: 2017-10-20T00:00:00.000Z,
        lastUpdated: 2018-03-16T00:00:00.000Z,
        excerpt: 'Lazy Loading of R Packages in Shiny via JavaScript event handling.',
        draft: false,
        heroImage: 'loading-dock.jpg',
        heroColor: '#025C75',
        imageAuthor: 'Hannes Egler',
        imageAuthorHandle: '@egla' },
     data: 
      { template: 'post',
        permalink: '/blog/:title/',
        layout: 'post',
        title: 'Lazy Loading R Packages in Shiny',
        date: 2017-10-20T00:00:00.000Z,
        lastUpdated: 2018-03-16T00:00:00.000Z,
        excerpt: 'Lazy Loading of R Packages in Shiny via JavaScript event handling.',
        draft: false,
        heroImage: 'loading-dock.jpg',
        heroColor: '#025C75',
        imageAuthor: 'Hannes Egler',
        imageAuthorHandle: '@egla',
        content: '\n## Introduction\n\nShiny is a powerful framework for quickly building user interfaces around R programs. However, [R is not a fast language](http://adv-r.had.co.nz/Performance.html), and this is particularly noticeable when loading R packages into memory. \n\nIn Shiny, R packages are loaded during app initialization. Unfortunately, this occurs before [first paint](https://developers.google.com/web/tools/lighthouse/audits/first-meaningful-paint), as the app\'s UI is actually rendered from R. This leads to poor UX, because package loads are extremely penalizing. However, if you are simply loading packages for data manipulation, there is no reason to block initial page rendering with your package loads. \n\nUnfortunately, <del>Shiny does not have the luxury of <a href="https://nodejs.org/en/docs/guides/blocking-vs-non-blocking/">non-blocking, asynchronous calls</a></del>. _Edit: [Shiny can now make non-blocking calls](https://rstudio.github.io/promises/articles/shiny.html) with the `Promises` package, and the `Shiny@async` branch!_ However, we can still improve user experience by loading our packages that do not affect UI _after_ first paint.\n\nHere I will present one solution for lazy-loading packages in Shiny.\n\n## Implementation\n\n### Visual Cues\n\nIn my app, my landing page has a large hero with a "Get Started" button. This presents a simple opportunity to inform users we are still loading. \n\n<center>\n  <button class="button is-large is-primary" disabled id="getStarted" title="Let\'s Go!" type="button">\n    <i class="fas fa-circle-notch fa-spin"></i>\n    <span>&nbsp;Loading R Packages...</span>\n  </button>\n</center>\n<br>\n\nHTML Markup with <span class="hover-text" title="This button will appear slightly differently in bootstrap--I am using the Bulma CSS framework on my blog.">Bootstrap</span>:\n```html\n<button class="btn btn-default btn-lg disabled" id="getStarted" title="Let\'s Go!" type="button">\n  <i class="fas fa-circle-notch fa-spin"></i>\n   <span>&nbsp;Loading R Packages...</span>\n</button>\n``` \n\nThe corresponding Shiny element is a bit more complex, as you need to use the `icon()` function. You may also need to add padding between your icon & button span with CSS rather than markup.\n```r\nactionButton(\n  inputId = "getStarted", \n  label   = "Loading R Packages...",\n  class   = "btn-primary btn-lg disabled", # css-tooltip\n  title   = "Let\'s Go!",\n  icon(\n    name  = "circle-notch", \n    class = "fa-spin", \n    lib   = "font-awesome"\n  )\n)\n```\n\n### Data Transfer from JavaScript to R\n\nIn your client-side JavaScript, you can call the `onInputChange()` method on the global `Shiny` object to pass any object from JavaScript to Shiny. Shiny will then pass this object into R as a (nested) list. This method is designed to fire when a given JavaScript object changes. However, we can create our own event listeners to fire off a set value at our own discretion. \n\nIn this case, we will simply be sending any non-null value: \n```js\nconst handlers = {\n  lazyLoadPackages: val => {\n    // First argument is input name in R\n    // Second argument is value to send (or to depend on)\n    Shiny.onInputChange(\'sessionInitialized\', val);\n  }\n}\n```\n\nIn JavaScript, one of the most common times to fire events is on completion of DOM loading (in JQuery, `$( document ).ready()` or as of HTML5, `DOMContentLoaded`). However, here we are depending on our Shiny session initialization. This is most easily accomplished in JQuery:\n\n```js\n$( document ).on(\'shiny:sessioninitialized\', () => {\n  // here we will simply pass 1\n  handlers.lazyLoadPackages(1);\n});\n```\n\n**Note:** You could fire on any event you want. For example, you could listen for a link hover and preemptively load the requisite R packages a user would need if they clicked that link. \n\n### Receive Client-Side Event & Load Packages\n\nNow, in our Shiny App, we have to receive this value! Fortunately, `.onInputChange()` creates our Shiny input for us, so we can simply wait for the input to be sent:\n```r\nobserveEvent(input$sessionInitialized, {\n  # Lazy-load packages here\n  library(tidyverse)\n}, ignoreNULL = TRUE, ignoreInit = TRUE, once = TRUE)\n```\nHere we are ignoring the initialized input, any NULL values, and ensuring the event only fires once. \n\n**Disclaimer**: Be very careful when deciding which packages to delay loading. If you have any third party UI elements in your ui.R file, you can break rendering. One possible workaround for this is to render any third party UI elements with a delayed `renderUI()`. \n\n### Let the User Know!\n\nFinally, we need to fire an event in our client-side JavaScript to inform users that the Shiny app has completed initialization. \n\nThis is rather straightforward thanks to Dean Attali\'s ShinyJS package, which allows for JavaScript execution directly from R. \n```r\nobserveEvent(input$sessionInitialized, {\n  library(tidyverse)\n  runjs(\'handlers.initGetStarted();\')\n}, ignoreNULL = TRUE, ignoreInit = TRUE, once = TRUE)\n```\n\nBut hang on, what is `.initGetStarted();`? This will be more specific to your use-case, but for my loading button, I needed to:  \n\n- Change the button\'s text\n- Removing the loading spinner\n- Enable the button\n- Enable my CSS tooltip\n\nThanks to HTML5\'s `classList()`, this is just some native JS. \n```js\n{\n  initGetStarted: () => {\n    const getStartedButton = document.getElementById(\'getStarted\');\n    // change innerHTML\n    getStartedButton.innerHTML = \'Get Started\';\n    // remove disabled class\n    getStartedButton.classList.remove(\'disabled\');\n    // add css-tooltip class\n    getStartedButton.classList.add(\'css-tooltip\');\n  }\n}\n```\n\nAnd that\'s it! You\'re done! Your button will transform:\n\n<center>\n  <button class="button is-large is-primary" disabled id="getStarted" title="Let\'s Go!" type="button">\n    <i class="fas fa-circle-notch fa-spin"></i>\n    <span>&nbsp;Loading R Packages...</span>\n  </button>\n</center>\n<br>\n<center>\n  <span class="icon is-large">\n    <i class="fas fa-2x fa-arrow-down"></i>\n  </span>\n</center>\n<br>\n<center>\n  <button class="button is-large is-primary" id="getStarted" title="Let\'s Go!" type="button">\n    <span>Get Started</span>\n  </button>\n</center>\n<br>',
        url: '/blog/lazy-loading-r-packages-in-shiny/' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: '3772e15416bf6426362a499972495f4c',
     defaults: { template: 'post', permalink: '/blog/:title/' } },
  '/Users/samhinshaw/projects/reptar_blog/_root/about.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_root/about.md',
     path: '/Users/samhinshaw/projects/reptar_blog/_root/about.md',
     destination: '/about/index.html',
     frontmatter: 
      { title: 'About',
        template: 'page',
        heroColor: '#2e83a9',
        heroImage: 'juniper-point.jpg',
        heroText: 'About Me',
        subtitle: 'Sam Hinshaw' },
     data: 
      { template: 'page',
        permalink: '/:title/',
        title: 'About',
        heroColor: '#2e83a9',
        heroImage: 'juniper-point.jpg',
        heroText: 'About Me',
        subtitle: 'Sam Hinshaw',
        content: '\n<div class="columns is-desktop">\n  <div class="column is-12-tablet is-12-mobile is-hidden-desktop">\n    <div class="content has-text-centered">\n      <img class="avatar" src="/images/portrait.jpg" alt="Profile Picture" height="200" width="200">\n    </div>\n  </div>\n  <div class="column is-8-desktop is-12-tablet is-12-mobile">\n\nI am a graduate student in bioinformatics at The University of British Columbia studying integrative analysis of multi-omic datasets, specifically transcriptomics, proteomics, and metabolomics. I build tools to make bioinformatics more accessible to all scientists&mdash;limited technical expertise required! \n\nWhile I started programming exclusively in <span class="hover-text" title="#rstats"><a href="https://twitter.com/hashtag/rstats">R</a></span>, I have since taught myself Python and JavaScript, delving deeper into modern web development techniques and frameworks. By focusing my time on software engineering, I can create fully functional applications to make my research methodologies available to the public.\n\nI have always had a passion for technology, and in my spare time I like to hack things together. As I learn more, I have begun to give back to the community by contributing to [open-source projects](/projects#open-source).\n\n\nOther interests of mine include:\n- 🏃‍ Running\n- 🥖 Baking\n- 🌲 Hiking & camping\n- 📸 Photography\n- ☕️ Coffee\n- 🍺 Craft beer\n\n  </div>\n  <div class="column is-4 is-hidden-touch">\n    <div class="content is-pulled-right">\n      <img class="avatar" src="/images/portrait.jpg" alt="Profile Picture" height="200" width="200">\n    </div>\n  </div>\n</div>\n',
        url: '/about/' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: '888c3126178a8920934ef66535f73ec6',
     defaults: { template: 'page', permalink: '/:title/' } },
  '/Users/samhinshaw/projects/reptar_blog/_root/blog.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_root/blog.md',
     path: '/Users/samhinshaw/projects/reptar_blog/_root/blog.md',
     destination: '/blog/index.html',
     frontmatter: { title: 'Blog', template: 'post_index' },
     data: 
      { template: 'post_index',
        permalink: '/:title/',
        title: 'Blog',
        content: '',
        url: '/blog/' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: 'c55eb7664675274c57d1a1b7e16ee9ec',
     defaults: { template: 'page', permalink: '/:title/' } },
  '/Users/samhinshaw/projects/reptar_blog/_root/projects.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/_root/projects.md',
     path: '/Users/samhinshaw/projects/reptar_blog/_root/projects.md',
     destination: '/projects/index.html',
     frontmatter: 
      { title: 'Projects',
        template: 'page',
        heroColor: '#d7c079',
        heroImage: 'lions-gate.jpg',
        heroText: 'Projects' },
     data: 
      { template: 'page',
        permalink: '/:title/',
        title: 'Projects',
        heroColor: '#d7c079',
        heroImage: 'lions-gate.jpg',
        heroText: 'Projects',
        content: '\n<div class="columns is-desktop">\n  <div class="column is-8 is-offset-2">\n\n<h3 class="is-size-3">Graduate Projects</h2>\n\n*****\n\n<h4 class="is-size-4">\n  <a href="https://www.metabridge.org">MetaBridge</a>\n  <span class="icon social-github">\n    &nbsp;\n    <a class="icon" href="https://github.com/samhinshaw/metabridge_shiny">\n      <i class="social fab fa-github"></i>\n    </a>\n  </span>\n</h4>\n\nA systems biology-based integrative analysis platform for integration of metabolomics data. Built in [Shiny](https://shiny.rstudio.com/), this application allows users to upload a list of metabolites and get back a list of directly interacting enzymes and the genes that encode for those enzymes. Currently the only supported species is *Homo sapiens*. Some planned features include: \n- R package of MetaBridge, implementing all of the methods used here for use in scripted analyses. \n\n*NOTE: MetaBridge is hosted on Canadian soil at The University of British Columbia. No data uploaded to the server is saved.*\n\n<h4 class="is-size-4">\n  <a href="https://www.metabridge.org/dev">MetaBridge 2.0</a>\n  (In Development)\n  <span class="icon social-github">\n    &nbsp;\n    <a class="icon" href="https://github.com/samhinshaw/metabridge_node">\n      <i class="social fab fa-github"></i>\n    </a>\n  </span>\n</h4>\n\nMetaBridge 2.0 is a ground-up rewrite of MetaBridge 1.0! Written in React with Next.js, MetaBridge 2.0 will a scalable, performant version of the proof-of-concept application MetaBridge. As I write MetaBridge 2.0, you are welcome to follow its development! I am working as quickly as possible to reach feature parity with MetaBridge. From there, I will be able to implement new features, with full control over the full stack. Some planned features include: \n- User session management. Save your current analysis, and reupload it at any time to pick up where you left off! This is intended to help users share their work, and remove some of the downsides of working with web tools.\n- Public API for use in scripted analyses.\n\n*NOTE: MetaBridge 2.0 is hosted on Canadian soil at The University of British Columbia. No uploaded data is retained on the server, and users can purge their uploaded data manually.*\n\n**Concepts demonstrated**\n- Client-side rendering with React\n- Server-side rendering and code-splitting with Next.js\n- Server routing with Node.js\n- <del>PostgreSQL for data storage</del> (not yet implemented)\n- <del>GraphQL server & querying with Apollo</del> (not yet implemented)\n\n## Personal Projects\n\n*****\n\n<h3 class="is-size=3">\n  <a href="https://getse.xyz">Get Fit</a>\n  <span class="icon social-github">\n    &nbsp;\n    <a class="icon" href="https://github.com/samhinshaw/get_fit">\n      <i class="social fab fa-github"></i>\n    </a>\n  </span>\n</h3>\n\nGet Fit is a fitness-tracking app to help with the difficulty of delayed gratification! We all know it\'s hard to stick to a workout schedule or a diet, but why? Humans are terrible at reasoning when it comes to delayed gratification, we always want everything now!! That\'s why I built this web app--to help tie long-term fitness goals to near-term rewards! Keep track of your diet and exercise and earn points towards short-term goals! It might take you a while to reach your ultimate goal, but you\'ll have fun along the way, and hopefully Get Fit will make it just a bit easier to not eat that tempting donut!\n\n\n**Concepts demonstrated**\n- Node.js server with and server routing Express\n- Data visualization with D3.js\n- Local user authentication with passport.js\n- Secure password storage with bcryptjs\n- Session management with cookies\n- Email registration and validation with nodemailer\n- User data storage and retrieval with MongoDB and Mongoose ODM\n- Server-side logging in Node.js with Winston\n- Client-side logging with Rollbar\n- Client side DOM manipulation with vanilla JS and JQuery\n- Webpack for client-side dependency management and code bundling\n- Babel transpiling on client and server to enable ESNext features \n- Asynchronous programming and routing with async/await and Promises\n- Security-conscious sever with Snyk\n- Deployment pipeline and server management with PM2\n- Sass styling with Bulma\n- View templating with Pug\n- JavaScript-Python integration with PythonShell and PyMongo\n- Server-side datetime handling with Moment.js\n- Lightweight client-side datetime handling with date-fns\n- Client-server timezone synchronization\n- Code linting enforcement with ESLint\n- Code style enforcement with Prettier\n- Bruteforce prevention\n- User input sanitization and validation\n- Self-hosted webserver with Nginx on Vultr (a Virtual Private Server provider)\n\n<h3 class="is-size=3">\n  <a href="https://samhinshaw.com">This Website!</a>\n  <span class="icon social-github">\n    &nbsp;\n    <a class="icon" href="https://github.com/samhinshaw/blog">\n      <i class="social fab fa-github"></i>\n    </a>\n  </span>\n</h3>\n\nThis website is a static site generated with [reptar](https://reptar.github.io)!\n\n**Concepts demonstrated**\n- Webpage templating with EJS\n- Flexbox CSS with Bulma\n- Client side DOM manipulation with vanilla JS and JQuery\n- Self-hosted webserver with Nginx on Vultr (a Virtual Private Server provider)\n\n<h3 class="is-size-3" id="open-source">\n  Open-Source Contributions\n</h3>\n\n*****\n\n### [python-myfitnesspal](https://github.com/coddingtonbear/python-myfitnesspal/pulls?utf8=%E2%9C%93&q=is%3Apr%20author%3Asamhinshaw%20)\n\nAn open API for MyFitnessPal written in Python. I have contributed various functionality to the project, including:\n\n* The ability to pull exercise data from public and authenticated MyFitnessPal profiles.\n* The ability to determine when a diary entry has been marked as completed.\n* Tests to validate API stability.\n\n  </div>\n</div>\n',
        url: '/projects/' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: '610445cd0272d742a9b65dce557d9a4f',
     defaults: { template: 'page', permalink: '/:title/' } },
  '/Users/samhinshaw/projects/reptar_blog/android-chrome-192x192.png': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/android-chrome-192x192.png',
     path: '/Users/samhinshaw/projects/reptar_blog/android-chrome-192x192.png',
     destination: '/android-chrome-192x192.png',
     frontmatter: {},
     data: { url: '/android-chrome-192x192.png' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/android-chrome-512x512.png': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/android-chrome-512x512.png',
     path: '/Users/samhinshaw/projects/reptar_blog/android-chrome-512x512.png',
     destination: '/android-chrome-512x512.png',
     frontmatter: {},
     data: { url: '/android-chrome-512x512.png' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/apple-touch-icon.png': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/apple-touch-icon.png',
     path: '/Users/samhinshaw/projects/reptar_blog/apple-touch-icon.png',
     destination: '/apple-touch-icon.png',
     frontmatter: {},
     data: { url: '/apple-touch-icon.png' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/browserconfig.xml': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/browserconfig.xml',
     path: '/Users/samhinshaw/projects/reptar_blog/browserconfig.xml',
     destination: '/browserconfig.xml',
     frontmatter: {},
     data: { url: '/browserconfig.xml' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/css/_elements.less': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/css/_elements.less',
     path: '/Users/samhinshaw/projects/reptar_blog/css/_elements.less',
     destination: '/css/_elements.css',
     frontmatter: {},
     data: { url: '/css/_elements.css' },
     skipProcessing: true,
     assetProcessor: 
      { calculateDestination: [Function: calculateDestination],
        render: [Function: render] },
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/css/_highlight_atom-one-dark.css': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/css/_highlight_atom-one-dark.css',
     path: '/Users/samhinshaw/projects/reptar_blog/css/_highlight_atom-one-dark.css',
     destination: '/css/_highlight_atom-one-dark.css',
     frontmatter: {},
     data: { url: '/css/_highlight_atom-one-dark.css' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/css/_highlight_oceanic-next.css': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/css/_highlight_oceanic-next.css',
     path: '/Users/samhinshaw/projects/reptar_blog/css/_highlight_oceanic-next.css',
     destination: '/css/_highlight_oceanic-next.css',
     frontmatter: {},
     data: { url: '/css/_highlight_oceanic-next.css' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/css/_highlight.css': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/css/_highlight.css',
     path: '/Users/samhinshaw/projects/reptar_blog/css/_highlight.css',
     destination: '/css/_highlight.css',
     frontmatter: {},
     data: { url: '/css/_highlight.css' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/css/_layout.less': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/css/_layout.less',
     path: '/Users/samhinshaw/projects/reptar_blog/css/_layout.less',
     destination: '/css/_layout.css',
     frontmatter: {},
     data: { url: '/css/_layout.css' },
     skipProcessing: true,
     assetProcessor: 
      { calculateDestination: [Function: calculateDestination],
        render: [Function: render] },
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/css/_style.css': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/css/_style.css',
     path: '/Users/samhinshaw/projects/reptar_blog/css/_style.css',
     destination: '/css/_style.css',
     frontmatter: {},
     data: { url: '/css/_style.css' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/css/_variables.less': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/css/_variables.less',
     path: '/Users/samhinshaw/projects/reptar_blog/css/_variables.less',
     destination: '/css/_variables.css',
     frontmatter: {},
     data: { url: '/css/_variables.css' },
     skipProcessing: true,
     assetProcessor: 
      { calculateDestination: [Function: calculateDestination],
        render: [Function: render] },
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/css/bulma.sass': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/css/bulma.sass',
     path: '/Users/samhinshaw/projects/reptar_blog/css/bulma.sass',
     destination: '/css/bulma.css',
     frontmatter: {},
     data: { url: '/css/bulma.css' },
     skipProcessing: true,
     assetProcessor: 
      { calculateDestination: [Function: calculateDestination],
        render: [Function: render] },
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/css/main.less': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/css/main.less',
     path: '/Users/samhinshaw/projects/reptar_blog/css/main.less',
     destination: '/css/main.css',
     frontmatter: {},
     data: { url: '/css/main.css' },
     skipProcessing: true,
     assetProcessor: 
      { calculateDestination: [Function: calculateDestination],
        render: [Function: render] },
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/favicon-16x16.png': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/favicon-16x16.png',
     path: '/Users/samhinshaw/projects/reptar_blog/favicon-16x16.png',
     destination: '/favicon-16x16.png',
     frontmatter: {},
     data: { url: '/favicon-16x16.png' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/favicon-32x32.png': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/favicon-32x32.png',
     path: '/Users/samhinshaw/projects/reptar_blog/favicon-32x32.png',
     destination: '/favicon-32x32.png',
     frontmatter: {},
     data: { url: '/favicon-32x32.png' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/favicon.ico': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/favicon.ico',
     path: '/Users/samhinshaw/projects/reptar_blog/favicon.ico',
     destination: '/favicon.ico',
     frontmatter: {},
     data: { url: '/favicon.ico' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/fonts/FiraCode-Bold.woff2': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/fonts/FiraCode-Bold.woff2',
     path: '/Users/samhinshaw/projects/reptar_blog/fonts/FiraCode-Bold.woff2',
     destination: '/fonts/FiraCode-Bold.woff2',
     frontmatter: {},
     data: { url: '/fonts/FiraCode-Bold.woff2' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/fonts/FiraCode-Light.woff2': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/fonts/FiraCode-Light.woff2',
     path: '/Users/samhinshaw/projects/reptar_blog/fonts/FiraCode-Light.woff2',
     destination: '/fonts/FiraCode-Light.woff2',
     frontmatter: {},
     data: { url: '/fonts/FiraCode-Light.woff2' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/fonts/FiraCode-Medium.woff2': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/fonts/FiraCode-Medium.woff2',
     path: '/Users/samhinshaw/projects/reptar_blog/fonts/FiraCode-Medium.woff2',
     destination: '/fonts/FiraCode-Medium.woff2',
     frontmatter: {},
     data: { url: '/fonts/FiraCode-Medium.woff2' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/fonts/FiraCode-Regular.woff2': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/fonts/FiraCode-Regular.woff2',
     path: '/Users/samhinshaw/projects/reptar_blog/fonts/FiraCode-Regular.woff2',
     destination: '/fonts/FiraCode-Regular.woff2',
     frontmatter: {},
     data: { url: '/fonts/FiraCode-Regular.woff2' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/fonts/fontawesome-webfont.eot': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/fonts/fontawesome-webfont.eot',
     path: '/Users/samhinshaw/projects/reptar_blog/fonts/fontawesome-webfont.eot',
     destination: '/fonts/fontawesome-webfont.eot',
     frontmatter: {},
     data: { url: '/fonts/fontawesome-webfont.eot' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/fonts/fontawesome-webfont.svg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/fonts/fontawesome-webfont.svg',
     path: '/Users/samhinshaw/projects/reptar_blog/fonts/fontawesome-webfont.svg',
     destination: '/fonts/fontawesome-webfont.svg',
     frontmatter: {},
     data: { url: '/fonts/fontawesome-webfont.svg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/fonts/fontawesome-webfont.ttf': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/fonts/fontawesome-webfont.ttf',
     path: '/Users/samhinshaw/projects/reptar_blog/fonts/fontawesome-webfont.ttf',
     destination: '/fonts/fontawesome-webfont.ttf',
     frontmatter: {},
     data: { url: '/fonts/fontawesome-webfont.ttf' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/fonts/fontawesome-webfont.woff': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/fonts/fontawesome-webfont.woff',
     path: '/Users/samhinshaw/projects/reptar_blog/fonts/fontawesome-webfont.woff',
     destination: '/fonts/fontawesome-webfont.woff',
     frontmatter: {},
     data: { url: '/fonts/fontawesome-webfont.woff' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/fonts/fontawesome-webfont.woff2': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/fonts/fontawesome-webfont.woff2',
     path: '/Users/samhinshaw/projects/reptar_blog/fonts/fontawesome-webfont.woff2',
     destination: '/fonts/fontawesome-webfont.woff2',
     frontmatter: {},
     data: { url: '/fonts/fontawesome-webfont.woff2' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/fonts/FontAwesome.otf': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/fonts/FontAwesome.otf',
     path: '/Users/samhinshaw/projects/reptar_blog/fonts/FontAwesome.otf',
     destination: '/fonts/FontAwesome.otf',
     frontmatter: {},
     data: { url: '/fonts/FontAwesome.otf' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/aerial-wave.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/aerial-wave.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/aerial-wave.jpg',
     destination: '/images/aerial-wave.jpg',
     frontmatter: {},
     data: { url: '/images/aerial-wave.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/arrow.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/arrow.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/arrow.jpg',
     destination: '/images/arrow.jpg',
     frontmatter: {},
     data: { url: '/images/arrow.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/bondi-beach.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/bondi-beach.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/bondi-beach.jpg',
     destination: '/images/bondi-beach.jpg',
     frontmatter: {},
     data: { url: '/images/bondi-beach.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/burrard-bridge.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/burrard-bridge.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/burrard-bridge.jpg',
     destination: '/images/burrard-bridge.jpg',
     frontmatter: {},
     data: { url: '/images/burrard-bridge.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/cajon-pass.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/cajon-pass.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/cajon-pass.jpg',
     destination: '/images/cajon-pass.jpg',
     frontmatter: {},
     data: { url: '/images/cajon-pass.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/cat-ios.png': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/cat-ios.png',
     path: '/Users/samhinshaw/projects/reptar_blog/images/cat-ios.png',
     destination: '/images/cat-ios.png',
     frontmatter: {},
     data: { url: '/images/cat-ios.png' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/cat.png': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/cat.png',
     path: '/Users/samhinshaw/projects/reptar_blog/images/cat.png',
     destination: '/images/cat.png',
     frontmatter: {},
     data: { url: '/images/cat.png' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/coffee-ios.png': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/coffee-ios.png',
     path: '/Users/samhinshaw/projects/reptar_blog/images/coffee-ios.png',
     destination: '/images/coffee-ios.png',
     frontmatter: {},
     data: { url: '/images/coffee-ios.png' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/coffee.png': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/coffee.png',
     path: '/Users/samhinshaw/projects/reptar_blog/images/coffee.png',
     destination: '/images/coffee.png',
     frontmatter: {},
     data: { url: '/images/coffee.png' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/computer.png': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/computer.png',
     path: '/Users/samhinshaw/projects/reptar_blog/images/computer.png',
     destination: '/images/computer.png',
     frontmatter: {},
     data: { url: '/images/computer.png' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/dog-mountain-fir.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/dog-mountain-fir.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/dog-mountain-fir.jpg',
     destination: '/images/dog-mountain-fir.jpg',
     frontmatter: {},
     data: { url: '/images/dog-mountain-fir.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/ferris-wheel.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/ferris-wheel.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/ferris-wheel.jpg',
     destination: '/images/ferris-wheel.jpg',
     frontmatter: {},
     data: { url: '/images/ferris-wheel.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/first-lake-crop.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/first-lake-crop.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/first-lake-crop.jpg',
     destination: '/images/first-lake-crop.jpg',
     frontmatter: {},
     data: { url: '/images/first-lake-crop.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/first-lake.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/first-lake.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/first-lake.jpg',
     destination: '/images/first-lake.jpg',
     frontmatter: {},
     data: { url: '/images/first-lake.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/getty-villa-wall.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/getty-villa-wall.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/getty-villa-wall.jpg',
     destination: '/images/getty-villa-wall.jpg',
     frontmatter: {},
     data: { url: '/images/getty-villa-wall.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/getty-villa-wheat.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/getty-villa-wheat.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/getty-villa-wheat.jpg',
     destination: '/images/getty-villa-wheat.jpg',
     frontmatter: {},
     data: { url: '/images/getty-villa-wheat.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/grass.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/grass.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/grass.jpg',
     destination: '/images/grass.jpg',
     frontmatter: {},
     data: { url: '/images/grass.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/juniper-point-dog.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/juniper-point-dog.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/juniper-point-dog.jpg',
     destination: '/images/juniper-point-dog.jpg',
     frontmatter: {},
     data: { url: '/images/juniper-point-dog.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/juniper-point-tree.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/juniper-point-tree.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/juniper-point-tree.jpg',
     destination: '/images/juniper-point-tree.jpg',
     frontmatter: {},
     data: { url: '/images/juniper-point-tree.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/juniper-point.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/juniper-point.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/juniper-point.jpg',
     destination: '/images/juniper-point.jpg',
     frontmatter: {},
     data: { url: '/images/juniper-point.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/laptop-ios.png': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/laptop-ios.png',
     path: '/Users/samhinshaw/projects/reptar_blog/images/laptop-ios.png',
     destination: '/images/laptop-ios.png',
     frontmatter: {},
     data: { url: '/images/laptop-ios.png' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/lighthouse-park_stylized.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/lighthouse-park_stylized.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/lighthouse-park_stylized.jpg',
     destination: '/images/lighthouse-park_stylized.jpg',
     frontmatter: {},
     data: { url: '/images/lighthouse-park_stylized.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/lions-gate.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/lions-gate.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/lions-gate.jpg',
     destination: '/images/lions-gate.jpg',
     frontmatter: {},
     data: { url: '/images/lions-gate.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/loading-dock.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/loading-dock.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/loading-dock.jpg',
     destination: '/images/loading-dock.jpg',
     frontmatter: {},
     data: { url: '/images/loading-dock.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/overhead-coffee-mug.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/overhead-coffee-mug.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/overhead-coffee-mug.jpg',
     destination: '/images/overhead-coffee-mug.jpg',
     frontmatter: {},
     data: { url: '/images/overhead-coffee-mug.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/portrait_fullres.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/portrait_fullres.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/portrait_fullres.jpg',
     destination: '/images/portrait_fullres.jpg',
     frontmatter: {},
     data: { url: '/images/portrait_fullres.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/portrait.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/portrait.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/portrait.jpg',
     destination: '/images/portrait.jpg',
     frontmatter: {},
     data: { url: '/images/portrait.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/ring-light.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/ring-light.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/ring-light.jpg',
     destination: '/images/ring-light.jpg',
     frontmatter: {},
     data: { url: '/images/ring-light.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/rstudio.png': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/rstudio.png',
     path: '/Users/samhinshaw/projects/reptar_blog/images/rstudio.png',
     destination: '/images/rstudio.png',
     frontmatter: {},
     data: { url: '/images/rstudio.png' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/sailing-centre-sunset_stylized.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/sailing-centre-sunset_stylized.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/sailing-centre-sunset_stylized.jpg',
     destination: '/images/sailing-centre-sunset_stylized.jpg',
     frontmatter: {},
     data: { url: '/images/sailing-centre-sunset_stylized.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/sam_avatar.png': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/sam_avatar.png',
     path: '/Users/samhinshaw/projects/reptar_blog/images/sam_avatar.png',
     destination: '/images/sam_avatar.png',
     frontmatter: {},
     data: { url: '/images/sam_avatar.png' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/sam_logo.png': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/sam_logo.png',
     path: '/Users/samhinshaw/projects/reptar_blog/images/sam_logo.png',
     destination: '/images/sam_logo.png',
     frontmatter: {},
     data: { url: '/images/sam_logo.png' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/sam.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/sam.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/sam.jpg',
     destination: '/images/sam.jpg',
     frontmatter: {},
     data: { url: '/images/sam.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/ships-at-sunset_stylized.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/ships-at-sunset_stylized.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/ships-at-sunset_stylized.jpg',
     destination: '/images/ships-at-sunset_stylized.jpg',
     frontmatter: {},
     data: { url: '/images/ships-at-sunset_stylized.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/the-huntington-cacti.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/the-huntington-cacti.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/the-huntington-cacti.jpg',
     destination: '/images/the-huntington-cacti.jpg',
     frontmatter: {},
     data: { url: '/images/the-huntington-cacti.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/the-huntington-lightbulbs.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/the-huntington-lightbulbs.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/the-huntington-lightbulbs.jpg',
     destination: '/images/the-huntington-lightbulbs.jpg',
     frontmatter: {},
     data: { url: '/images/the-huntington-lightbulbs.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/type-letters.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/type-letters.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/type-letters.jpg',
     destination: '/images/type-letters.jpg',
     frontmatter: {},
     data: { url: '/images/type-letters.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/typesetting-block.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/typesetting-block.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/typesetting-block.jpg',
     destination: '/images/typesetting-block.jpg',
     frontmatter: {},
     data: { url: '/images/typesetting-block.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/typesetting.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/typesetting.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/typesetting.jpg',
     destination: '/images/typesetting.jpg',
     frontmatter: {},
     data: { url: '/images/typesetting.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/images/yellow-umbrellas.jpg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/images/yellow-umbrellas.jpg',
     path: '/Users/samhinshaw/projects/reptar_blog/images/yellow-umbrellas.jpg',
     destination: '/images/yellow-umbrellas.jpg',
     frontmatter: {},
     data: { url: '/images/yellow-umbrellas.jpg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/index.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/index.md',
     path: '/Users/samhinshaw/projects/reptar_blog/index.md',
     destination: '/index.html',
     frontmatter: 
      { title: 'Index',
        template: 'landing_page',
        heroName: 'hero-body landing-page-hero',
        heroText: 'Welcome' },
     data: 
      { template: 'landing_page',
        permalink: '/',
        title: 'Index',
        heroName: 'hero-body landing-page-hero',
        heroText: 'Welcome',
        content: '',
        url: '/' },
     skipProcessing: false,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] },
     checksum: 'f351610407c1df0348999c1dba6ff76d',
     defaults: { template: 'landing_page', permalink: '/' } },
  '/Users/samhinshaw/projects/reptar_blog/js/main.js': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/js/main.js',
     path: '/Users/samhinshaw/projects/reptar_blog/js/main.js',
     destination: '/js/main.js',
     frontmatter: {},
     data: { url: '/js/main.js' },
     skipProcessing: true,
     assetProcessor: 
      { calculateDestination: [Function: calculateDestination],
        render: [Function: render] },
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/LICENSE': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/LICENSE',
     path: '/Users/samhinshaw/projects/reptar_blog/LICENSE',
     destination: '/LICENSE',
     frontmatter: {},
     data: { url: '/LICENSE' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/LICENSE_PHOTOS': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/LICENSE_PHOTOS',
     path: '/Users/samhinshaw/projects/reptar_blog/LICENSE_PHOTOS',
     destination: '/LICENSE_PHOTOS',
     frontmatter: {},
     data: { url: '/LICENSE_PHOTOS' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/manifest.json': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/manifest.json',
     path: '/Users/samhinshaw/projects/reptar_blog/manifest.json',
     destination: '/manifest.json',
     frontmatter: {},
     data: { url: '/manifest.json' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/mstile-150x150.png': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/mstile-150x150.png',
     path: '/Users/samhinshaw/projects/reptar_blog/mstile-150x150.png',
     destination: '/mstile-150x150.png',
     frontmatter: {},
     data: { url: '/mstile-150x150.png' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/package-lock.json': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/package-lock.json',
     path: '/Users/samhinshaw/projects/reptar_blog/package-lock.json',
     destination: '/package-lock.json',
     frontmatter: {},
     data: { url: '/package-lock.json' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/readme.md': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/readme.md',
     path: '/Users/samhinshaw/projects/reptar_blog/readme.md',
     destination: '/readme.html',
     frontmatter: {},
     data: { url: '/readme.html' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/reptar_files.log': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/reptar_files.log',
     path: '/Users/samhinshaw/projects/reptar_blog/reptar_files.log',
     destination: '/reptar_files.log',
     frontmatter: {},
     data: { url: '/reptar_files.log' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/reptar.log': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/reptar.log',
     path: '/Users/samhinshaw/projects/reptar_blog/reptar.log',
     destination: '/reptar.log',
     frontmatter: {},
     data: { url: '/reptar.log' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } },
  '/Users/samhinshaw/projects/reptar_blog/safari-pinned-tab.svg': 
   File {
     id: '/Users/samhinshaw/projects/reptar_blog/safari-pinned-tab.svg',
     path: '/Users/samhinshaw/projects/reptar_blog/safari-pinned-tab.svg',
     destination: '/safari-pinned-tab.svg',
     frontmatter: {},
     data: { url: '/safari-pinned-tab.svg' },
     skipProcessing: true,
     assetProcessor: null,
     filtered: false,
     _config: 
      Config {
        root: '/Users/samhinshaw/projects/reptar_blog/',
        _raw: [Object] },
     _renderer: 
      Renderer {
        _config: [Object],
        _md: [Object],
        renderMarkdown: [Function: bound renderMarkdown],
        _nunjucksEnv: [Object],
        renderTemplate: [Function: bound renderTemplate],
        renderTemplateString: [Function: bound renderTemplateString],
        addTemplateFilter: [Function: bound addTemplateFilter] } } }

building				 (861ms)
